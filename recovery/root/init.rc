import /init.recovery.${ro.hardware}.rc

on early-init
    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.
    write /sys/fs/selinux/checkreqprot 0

    # Set the security context for the init process.
    # This should occur before anything else (e.g. ueventd) is started.
    setcon u:r:init:s0

    start ueventd
    start healthd
    #Junren_Jie@EXP.sysframework,2015/07/01,Support Full Disk Ecryption.

    mkdir /firmware
    wait /dev/block/bootdevice/by-name/modem
    mount vfat /dev/block/bootdevice/by-name/modem /firmware ro

    #end Junren_Jie@EXP.sysframework add
on init
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    
    write /sys/class/leds/lcd-backlight/brightness 102
    write /sys/class/leds/button-backlight/brightness 255

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /external_sd
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mount tmpfs tmpfs /tmp
    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    
    #set cpu freq
    write /sys/module/rpm_resources/enable_low_power/L2_cache 1
    write /sys/module/rpm_resources/enable_low_power/pxo 1
    write /sys/module/rpm_resources/enable_low_power/vdd_dig 2
    write /sys/module/rpm_resources/enable_low_power/vdd_mem 2
    write /sys/module/pm_8x60/modes/cpu0/power_collapse/suspend_enabled 1
    write /sys/module/pm_8x60/modes/cpu0/standalone_power_collapse/suspend_enabled 1
    write /sys/module/pm_8x60/modes/cpu0/power_collapse/idle_enabled 1
    write /sys/module/pm_8x60/modes/cpu0/standalone_power_collapse/idle_enabled 1
    write /sys/module/pm_8x60/modes/cpu1/power_collapse/suspend_enabled 1
    write /sys/module/pm_8x60/modes/cpu2/power_collapse/suspend_enabled 1
    write /sys/module/pm_8x60/modes/cpu3/power_collapse/suspend_enabled 1
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor "userspace"
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 1026000
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor "userspace"
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq 1026000
    write /sys/devices/system/cpu/cpu1/online 0
    write /sys/devices/system/cpu/cpu2/online 0
    write /sys/devices/system/cpu/cpu3/online 0
    
#    write /sys/class/android_usb/android0/enable 0
#    write /sys/class/android_usb/android0/idVendor 22d9
#    write /sys/class/android_usb/android0/idProduct 2769
#    write /sys/class/android_usb/android0/functions adb
#    write /sys/class/android_usb/android0/enable 1
#    start adbd

#ifdef VENDOR_EDIT
#hewei@Swdp. Android. boot&charge, 2014/09/09, modify for Change the mount path of data partion
#    mount ext4 /dev/block/platform/msm_sdcc.1/by-name/userdata /data rw
    mount ext4 /dev/block/bootdevice/by-name/userdata /data rw
#endif
    setprop persist.sys.firstlaunch false

on fs
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18D1
    write /sys/class/android_usb/android0/idProduct D001
    write /sys/class/android_usb/android0/f_ffs/aliases adb
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}


on boot

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

# Load properties from /system/ + /factory after fs mount.
on load_all_props_action
    load_all_props

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_all_props_action

    trigger early-boot
    trigger boot

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0

service healthd /sbin/healthd -r
    critical
    seclabel u:r:healthd:s0

#service time_daemon /system/bin/time_daemon
#
#    class late_start
#    user root
#    group root
#    oneshot
#    disabled

#on property:persist.timed.enable=true
#    start time_daemon

service recovery /sbin/recovery
    seclabel u:r:recovery:s0

service adbd /sbin/adbd --root_seclabel=u:r:su:s0 --device_banner=recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0

on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
